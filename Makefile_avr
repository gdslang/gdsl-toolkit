MLTK=.
CC=gcc
MLTON=mlton
MLTONFLAGS=
CFLAGS=-g3 -fPIC -Wall -Iinclude
LFLAGS=-shared

include avr.mk

#GDSL=gdsl
GDSL_MEX=_manual
GDSL_COMP=$(GDSL)$(GDSL_MEX)
GDSL_EXEC=$(GDSL)c
GPREFIX=
GDSLFLAGS=--maxIter=42

GDSL_BASIS_HL=specifications/basis/prelude.ml specifications/basis/bbtree.ml
GDSL_RREIL_HL=specifications/rreil/rreil.ml specifications/rreil/rreil-examples.ml specifications/rreil/rreil-cif.ml specifications/rreil/rreil-pretty.ml specifications/rreil/fmap.ml specifications/rreil/rreil-opt.ml specifications/rreil/rreil-translator.ml
GDSL_ASM_HL=specifications/asm/asm.ml specifications/asm/asm-pretty.ml specifications/asm/asm-cif.ml
GDSL_OPT_HL=specifications/rreil/rreil-liveness.ml specifications/rreil/rreil-forward-subst.ml specifications/rreil/forward-subst/delayed-forward-subst/inline.ml specifications/rreil/forward-subst/delayed-forward-subst/substitute.ml specifications/rreil/forward-subst/delayed-forward-subst/substmap.ml specifications/rreil/forward-subst/forward-subst/inline.ml specifications/rreil/forward-subst/forward-subst/substitute.ml specifications/rreil/forward-subst/forward-subst/substmap.ml specifications/rreil/forward-subst/forward-subst/simplify-expressions.ml specifications/rreil/fusion/fusion.ml specifications/rreil/rreil-cleanup.ml

GDSL_AVR_HL=specifications/avr/avr.ml specifications/avr/avr-traverse.ml specifications/avr/avr-pretty.ml specifications/avr/avr-asm.ml
GDSL_AVR_TRANS_HL=specifications/avr/avr-rreil-pretty.ml specifications/avr/avr-rreil-registermapping.ml specifications/avr/avr-rreil-translator.ml specifications/avr/avr-liveness.ml

GDSL_SOURCES=$(GDSL_BASIS_HL) $(GDSL_RREIL_HL) $(GDSL_ASM_HL) $(GDSL_AVR_HL) $(GDSL_AVR_TRANS_HL) $(GDSL_OPT_HL)

.PHONY: libs tools

all: $(GDSL_EXEC) lib$(GDSL).so libs tools

$(GDSL_EXEC): $(GDSL_EXEC).mlb $(shell find detail/ -type f -name '*')
	$(MLTON) $(MLTONFLAGS) $<

lib$(GDSL).so: $(GDSL_COMP).c
	$(CC) $(CFLAGS) -c $< -o $(<:$(GDSL_MEX).c=.o)
	$(CC) $(LFLAGS) -o lib$(<:$(GDSL_MEX).c=.so) $(<:$(GDSL_MEX).c=.o)
#	$(CC) $(LFLAGS) -Wl,-soname,lib$(<:.c=.so) -o lib$(<:.c=.so) $(<:.c=.o)

$(GDSL_COMP).c: $(GDSL_EXEC) $(GDSL_SOURCES)
	./$< -o $(GDSL_COMP) $(GDSLFLAGS) $(GDSL_SOURCES:%="%")

tools: lib$(GDSL).so libs
	$(MAKE) -C $@/

libs: lib$(GDSL).so
	$(MAKE) -C $@/

clean:
	$(MAKE) -C libs/	clean
	$(MAKE) -C tools/ clean
	rm -f $(GDSL_EXEC) $(GDSL).o $(GDSL_COMP).c $(GDSL_COMP).h lib$(GDSL).so
